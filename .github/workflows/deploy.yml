name: Deploy locally

on:
  push:
    branches:
      - main
      - 'cpca/*'
      - 'cpcB/*'

jobs:
  deploy:
    runs-on: [self-hosted]

    # 在 job 層級聲明環境變數，透過 secrets 注入
    env:
      DB_SERVER: ${{ secrets.DB_SERVER }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      # 1. 取用程式碼
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Debug 步驟，檢查環境變數是否真的被注入 (日誌應顯示 ***)
      - name: Debug Secrets
        run: |
          echo "=== Debug secrets ==="
          echo "DB_SERVER = $DB_SERVER"
          echo "DB_USER   = $DB_USER"
          echo "DB_PASSWORD = $DB_PASSWORD"
          echo "DB_NAME     = $DB_NAME"
        # 注意：由於 secrets 被 mask，真實值在日誌中會以 *** 顯示

      # 3. 同步最新 Code 到指定路徑
      - name: Sync Latest Code to Remote Directory
        run: |
          mkdir -p ~/aviation_predictionweb
          rsync -av --delete --exclude '*.csv' "$GITHUB_WORKSPACE"/ ~/aviation_predictionweb/

      # 4. 建立 Docker 映像檔
      - name: Build Docker Image
        run: |
          cd ~/aviation_predictionweb
          docker build -t python312:v1.0.01 .

      # 4.1 清除懸空映像檔
      - name: Clean up Dangling Images
        run: docker image prune -f

      # 5. 停止 & 移除先前容器
      - name: Stop & Remove Old Container
        run: |
          docker stop python312_container || true
          docker rm   python312_container || true

      # 6. 執行新容器，用 job-level env 裏的變數(已由 secrets 注入)
      - name: Run Container
        run: |
          docker run -d -p 5001:5000 --name python312_container \
            -e DB_SERVER=$DB_SERVER \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e DB_NAME=$DB_NAME \
            python312:v1.0.01
